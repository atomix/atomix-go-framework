/*
Copyright 2021-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.storage.protocol.rsm.indexedmap;

import "google/protobuf/timestamp.proto";
import "atomix/primitive/meta/object.proto";
import "gogoproto/gogo.proto";

message IndexedMapState {
    repeated IndexedMapStateListener listeners = 1 [(gogoproto.nullable) = false];
    repeated IndexedMapEntry entries = 2 [(gogoproto.nullable) = false];
}

message IndexedMapStateListener {
    uint64 proposal_id = 1 [(gogoproto.customname) = "ProposalID", (gogoproto.casttype) = "ProposalID"];
    string key = 2;
    uint64 index = 3;
}

message IndexedMapEntry {
    IndexedMapEntryPosition pos = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
    IndexedMapEntryValue value = 2 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
}

message IndexedMapEntryPosition {
    uint64 index = 1;
    string key = 2;
}

message IndexedMapEntryValue {
    atomix.primitive.meta.ObjectMeta meta = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
    bytes value = 2;
    google.protobuf.Timestamp expire = 3 [(gogoproto.stdtime) = true];
}
