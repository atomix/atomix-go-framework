/*
Copyright 2019-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.service;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

message StateMachineSnapshot {
    uint64 index = 1 [(gogoproto.casttype) = "Index"];
    google.protobuf.Timestamp timestamp = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    repeated SessionSnapshot sessions = 3;
    repeated ServiceSnapshot services = 4;
}

// Service snapshot
message ServiceSnapshot {
    ServiceId service_id = 1 [(gogoproto.customname) = "ServiceID", (gogoproto.casttype) = "ServiceID", (gogoproto.nullable) = false];
    uint64 index = 2 [(gogoproto.casttype) = "Index"];
    bytes data = 3;
}

// Service session
message SessionSnapshot {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
    google.protobuf.Timestamp timestamp = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    uint64 last_request_id = 3 [(gogoproto.customname) = "LastRequestID", (gogoproto.casttype) = "RequestID"];
    uint64 last_response_id = 4 [(gogoproto.customname) = "LastResponseID", (gogoproto.casttype) = "ResponseID"];
    repeated ServiceId services = 5 [(gogoproto.nullable) = false, (gogoproto.casttype) = "ServiceID"];
    repeated SessionRequest pending_requests = 6;
    repeated SessionResponse pending_responses = 7;
    repeated SessionStreamSnapshot streams = 8;
}

// Service session stream
message SessionStreamSnapshot {
    uint64 stream_id = 1 [(gogoproto.customname) = "StreamID", (gogoproto.casttype) = "StreamID"];
    ServiceId service_id = 2 [(gogoproto.customname) = "ServiceID", (gogoproto.casttype) = "ServiceID", (gogoproto.nullable) = false];
    string operation_id = 3 [(gogoproto.customname) = "OperationID", (gogoproto.casttype) = "OperationID"];
}

message ServiceId {
    string type = 1;
    string cluster = 2;
    string name = 3;
}

message PartitionRequest {
    uint32 partition_id = 1 [(gogoproto.customname) = "PartitionID"];
    ClientRequest request = 2 [(gogoproto.nullable) = false];
}

message PartitionResponse {
    ClientResponse response = 1 [(gogoproto.nullable) = false];
}

message StateMachineRequest {
    google.protobuf.Timestamp timestamp = 1 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    ClientRequest request = 2 [(gogoproto.nullable) = false];
}

message StateMachineResponse {
    ClientResponse response = 1 [(gogoproto.nullable) = false];
}

message ClientRequest {
    uint64 client_id = 1 [(gogoproto.customname) = "ClientID", (gogoproto.casttype) = "ClientID"];
    oneof request {
        ClientConnectRequest connect = 2;
        ClientKeepAliveRequest keep_alive = 3;
        ClientCloseRequest close = 4;
        SessionRequest session = 5;
    }
}

message ClientResponse {
    uint64 client_id = 1 [(gogoproto.customname) = "ClientID", (gogoproto.casttype) = "ClientID"];
    ClientResponseStatus status = 2 [(gogoproto.nullable) = false];
    oneof response {
        ClientConnectResponse connect = 1;
        ClientKeepAliveResponse keep_alive = 2;
        ClientCloseResponse close = 3;
        SessionResponse session = 4;
    }
}

message ClientConnectRequest {

}

message ClientConnectResponse {

}

message ClientKeepAliveRequest {

}

message ClientKeepAliveResponse {

}

message ClientCloseRequest {

}

message ClientCloseResponse {

}

message SessionRequest {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
    oneof request {
        SessionOpenRequest open = 2;
        SessionCloseRequest close = 3;
        SessionCommandRequest command = 4;
        SessionQueryRequest query = 5;
    }
}

message SessionResponse {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
    oneof response {
        SessionOpenResponse open = 2;
        SessionCloseResponse close = 3;
        SessionCommandResponse command = 4;
        SessionQueryResponse query = 5;
    }
}

message SessionOpenRequest {
    ServiceId service_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "ServiceID", (gogoproto.casttype) = "ServiceID"];
}

message SessionOpenResponse {

}

message SessionCloseRequest {

}

message SessionCloseResponse {

}

message SessionCommandRequest {
    uint64 request_id = 1 [(gogoproto.customname) = "RequestID", (gogoproto.casttype) = "RequestID"];
    string operation_id = 2 [(gogoproto.customname) = "OperationID", (gogoproto.casttype) = "OperationID"];
    bytes value = 3;
}

message SessionCommandResponse {
    uint64 request_id = 1 [(gogoproto.customname) = "RequestID", (gogoproto.casttype) = "RequestID"];
    uint64 response_id = 2 [(gogoproto.customname) = "ResponseID", (gogoproto.casttype) = "ResponseID"];
    SessionResponseType type = 3;
    SessionResponseStatus status = 4 [(gogoproto.nullable) = false];
    bytes result = 5;
}

message SessionQueryRequest {
    uint64 request_id = 1 [(gogoproto.customname) = "RequestID", (gogoproto.casttype) = "RequestID"];
    string operation_id = 2 [(gogoproto.customname) = "OperationID", (gogoproto.casttype) = "OperationID"];
    bytes value = 3;
}

message SessionQueryResponse {
    uint64 last_request_id = 1 [(gogoproto.customname) = "LastRequestID", (gogoproto.casttype) = "RequestID"];
    uint64 last_index = 2 [(gogoproto.casttype) = "Index"];
    SessionResponseType type = 3;
    SessionResponseStatus status = 4 [(gogoproto.nullable) = false];
    bytes result = 5;
}


message PartitionRequest {
    uint32 partition_id = 1 [(gogoproto.customname) = "PartitionID"];
    SessionRequest request = 2;
}

message PartitionResponse {
    uint32 partition_id = 1 [(gogoproto.customname) = "PartitionID"];
    SessionResponse response = 2;
}

message StateMachineRequest {
    google.protobuf.Timestamp timestamp = 1 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    SessionRequest request = 2;
}

message StateMachineResponse {
    SessionResponse response = 1;
}

message SessionRequest {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
    oneof request {
        SessionOpenRequest open_session = 1;
        SessionKeepAliveRequest keep_alive = 2;
        SessionCloseRequest close_session = 3;
        SessionCommandRequest command = 4;
        SessionQueryRequest query = 5;
    }
}

message SessionResponse {
    SessionResponseType type = 1;
    SessionResponseStatus status = 2 [(gogoproto.nullable) = false];
    oneof response {
        SessionOpenResponse open_session = 3;
        SessionKeepAliveResponse keep_alive = 4;
        SessionCloseResponse close_session = 5;
        SessionCommandResponse command = 6;
        SessionQueryResponse query = 6;
    }
}

message SessionOpenRequest {

}

message SessionOpenResponse {

}

message SessionKeepAliveRequest {

}

message SessionKeepAliveResponse {

}

message SessionCloseRequest {

}

message SessionCloseResponse {

}

message SessionCommandRequest {
    ServiceId service_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "ServiceID", (gogoproto.casttype) = "ServiceID"];
    oneof request {
        ServiceOpenRequest open_service = 2;
        ServiceCloseRequest close_service = 3;
        ServiceOperationRequest operation = 4;
    }
}

message SessionCommandResponse {
    oneof response {
        ServiceOpenResponse open_service = 1;
        ServiceCloseResponse close_service = 2;
        ServiceOperationResponse operation = 3;
    }
}

message ServiceOpenRequest {

}

message ServiceOpenResponse {

}

message ServiceCloseRequest {

}

message ServiceCloseResponse {

}

message ServiceOperationRequest {

}

message ServiceOperationResponse {

}


message CreateServiceRequest {
    ServiceId service_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "ServiceID", (gogoproto.casttype) = "ServiceID"];
}

message CreateServiceResponse {

}

message CloseServiceRequest {
    ServiceId service_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "ServiceID", (gogoproto.casttype) = "ServiceID"];
}

message CloseServiceResponse {

}

message ServiceRequest {
    ServiceId service_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "ServiceID", (gogoproto.casttype) = "ServiceID"];
}

message ServiceResponse {

}


message SessionRequest {
    oneof request {
        OpenSessionRequest open_session = 1;
        KeepAliveRequest keep_alive = 2;
        CloseSessionRequest close_session = 3;
        SessionCommandRequest command = 4;
        SessionQueryRequest query = 5;
    }
}

message SessionResponse {
    SessionResponseType type = 1;
    SessionResponseStatus status = 2 [(gogoproto.nullable) = false];
    oneof response {
        OpenSessionResponse open_session = 3;
        KeepAliveResponse keep_alive = 4;
        CloseSessionResponse close_session = 5;
        SessionCommandResponse command = 6;
        SessionQueryResponse query = 7;
    }
}

message OpenSessionRequest {
    google.protobuf.Duration timeout = 2 [(gogoproto.stdduration) = true];
}

message OpenSessionResponse {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
}

message KeepAliveRequest {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
    uint64 ack_response_id = 2 [(gogoproto.customname) = "AckResponseID", (gogoproto.casttype) = "ResponseID"];
}

message KeepAliveResponse {
}

message CloseSessionRequest {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
}

message CloseSessionResponse {

}

message SessionCommandRequest {
    SessionCommandContext context = 1 [(gogoproto.nullable) = false];
    ServiceCommandRequest command = 2 [(gogoproto.nullable) = false];
}

message SessionCommandResponse {
    SessionResponseContext context = 1 [(gogoproto.nullable) = false];
    ServiceCommandResponse response = 2 [(gogoproto.nullable) = false];
}

message SessionQueryRequest {
    SessionQueryContext context = 1 [(gogoproto.nullable) = false];
    ServiceQueryRequest query = 2 [(gogoproto.nullable) = false];
}

message SessionQueryResponse {
    SessionResponseContext context = 1 [(gogoproto.nullable) = false];
    ServiceQueryResponse response = 2 [(gogoproto.nullable) = false];
}

message ServiceCommandRequest {
    ServiceId service_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "ServiceID", (gogoproto.casttype) = "ServiceID"];
    oneof request {
        ServiceOperationRequest operation = 2;
        ServiceCreateRequest create = 3;
        ServiceCloseRequest close = 4;
    }
}

message ServiceCommandResponse {
    oneof response {
        ServiceOperationResponse operation = 1;
        ServiceCreateResponse create = 2;
        ServiceCloseResponse close = 3;
    }
}

message ServiceQueryRequest {
    ServiceId service_id = 1 [(gogoproto.nullable) = false, (gogoproto.customname) = "ServiceID", (gogoproto.casttype) = "ServiceID"];
    oneof request {
        ServiceOperationRequest operation = 2;
    }
}

message ServiceQueryResponse {
    oneof response {
        ServiceOperationResponse operation = 2;
    }
}

message ServiceOperationRequest {
    string operation_id = 1 [(gogoproto.customname) = "OperationID", (gogoproto.casttype) = "OperationID"];
    bytes value = 2;
}

message ServiceOperationResponse {
    bytes result = 1;
}

message ServiceCreateRequest {

}

message ServiceCreateResponse {

}

message ServiceCloseRequest {

}

message ServiceCloseResponse {

}

message SessionCommandContext {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
    uint64 request_id = 2 [(gogoproto.customname) = "RequestID", (gogoproto.casttype) = "RequestID"];
}

message SessionQueryContext {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
    uint64 last_request_id = 2 [(gogoproto.customname) = "LastRequestID", (gogoproto.casttype) = "RequestID"];
    uint64 last_index = 3 [(gogoproto.casttype) = "Index"];
    bool sync = 4;
}

message SessionResponseContext {
    uint64 session_id = 1 [(gogoproto.customname) = "SessionID", (gogoproto.casttype) = "SessionID"];
    uint64 request_id = 2 [(gogoproto.customname) = "RequestID", (gogoproto.casttype) = "RequestID"];
    uint64 response_id = 3 [(gogoproto.customname) = "ResponseID", (gogoproto.casttype) = "ResponseID"];
    uint64 index = 4 [(gogoproto.casttype) = "Index"];
}

message SessionResponseStatus {
    SessionResponseCode code = 1;
    string message = 2;
    string leader = 3;
}

enum SessionResponseType {
    RESPONSE = 0;
    OPEN_STREAM = 1;
    CLOSE_STREAM = 2;
}

enum SessionResponseCode {
    OK = 0;
    ERROR = 1;
    NOT_LEADER = 2;
    UNKNOWN = 3;
    CANCELED = 4;
    NOT_FOUND = 5;
    ALREADY_EXISTS = 6;
    UNAUTHORIZED = 7;
    FORBIDDEN = 8;
    CONFLICT = 9;
    INVALID = 10;
    UNAVAILABLE = 11;
    NOT_SUPPORTED = 12;
    TIMEOUT = 13;
    INTERNAL = 14;
}

service PartitionService {
    rpc Query (PartitionRequest) returns (PartitionResponse);
    rpc QueryStream (PartitionRequest) returns (stream PartitionResponse);
    rpc Command (PartitionRequest) returns (PartitionResponse);
    rpc CommandStream (PartitionRequest) returns (stream PartitionResponse);
}
